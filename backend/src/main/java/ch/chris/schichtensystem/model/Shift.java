package ch.chris.schichtensystem.model;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotBlank;

@Entity
@Table(name = "shift")
public class Shift {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private int id;

    @NotBlank(message = "shiftid cannot be blank")
    private String shiftid;

    @NotBlank(message = "date cannot be blank")
    private String date;

    @NotBlank(message = "text cannot be blank")
    private String text;

    private int userId;

    public Shift() {
        // Default constructor
    }

    // Other constructors if needed

    public int getId() {
        return id;
    }

    // No setId method, as the ID is generated by the database

    public String getShiftid() {
        return shiftid;
    }

    public void setShiftid(String shiftid) {
        this.shiftid = shiftid;
    }

    public String getDate() {
        return date;
    }

    public void setDate(String date) {
        this.date = date;
    }

    public String getText() {
        return text;
    }

    public void setText(String text) {
        this.text = text;
    }

    public int getUserId() {
        return userId;
    }

    public void setUserId(String userId) {
        try {
            this.userId = Integer.parseInt(userId);
        } catch (NumberFormatException e) {
            // Log the error for debugging
            System.out.println("Invalid userId: " + userId);
            // Set a default value or throw an exception
            throw new IllegalArgumentException("Invalid userId: " + userId);
        }
    }
}
